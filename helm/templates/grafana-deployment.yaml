apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.grafana.name }}-grafana
spec:
  replicas: {{ .Values.grafana.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.grafana.name }}-grafana
  template:
    metadata:
      labels:
        app: {{ .Values.grafana.name }}-grafana
    spec:
      containers:
        - name: {{ .Values.grafana.name }}-grafana
          image: grafana/grafana:9.4.7
          ports:
            - containerPort: 3000
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: "admin"
            - name: DATASOURCE_ACCOUNT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.grafana.datasource.accountId.secretName }}
                  key: apiKey
            - name: DATASOURCE_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.grafana.datasource.apiKey.secretName }}
                  key: apiKey
            - name: GF_INSTALL_PLUGINS
              value: "newrelic-grafana-datasource"
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: "true"
            - name: GF_AUTH_ANONYMOUS_ORG_ROLE
              value: "Viewer"
            - name: GF_DASHBOARDS_JSON_ENABLED
              value: "true"
          volumeMounts:
            - name: dashboards
              mountPath: /etc/grafana/provisioning/dashboards
              readOnly: true
            - name: datasources
              mountPath: /etc/grafana/provisioning/datasources
              readOnly: true
      volumes:
        - name: dashboards
          configMap:
            name: ${{ .Values.grafana.name }}-grafana-dashboard-config
        - name: datasources
          configMap:
            name: ${{ .Values.grafana.name }}-grafana-datasource
